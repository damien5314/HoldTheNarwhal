apply plugin: "com.android.application"
apply plugin: "me.tatarka.retrolambda"
apply plugin: "com.jakewharton.hugo"
apply plugin: "com.getkeepsafe.dexcount"
apply plugin: "com.github.ben-manes.versions"
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
    maven { url "https://jitpack.io" }
}

android {
    compileSdkVersion COMPILE_SDK_VERSION
    buildToolsVersion BUILD_TOOLS_VERSION

    useLibrary "org.apache.http.legacy"

    defaultConfig {
        applicationId "com.ddiehl.android.htn"
        minSdkVersion 15
        targetSdkVersion TARGET_SDK_VERSION
        versionCode 13
        versionName "0.8"
        resConfigs "en"
        buildConfigField "long", "BUILD_TIME_UTC", "" + getTime()
        buildConfigField "String", "REDDIT_APP_ID", "\"" + REDDIT_APP_ID + "\""
        buildConfigField "String", "REDDIT_REDIRECT_URI", "\"" + REDDIT_REDIRECT_URI + "\""
        testInstrumentationRunner "android.support.test.runner.AndroidJUnitRunner"
    }

    signingConfigs {
        release {
            storeFile file(KEYSTORE_PATH)
            storePassword KEYSTORE_PWD
            keyAlias KEY_ALIAS
            keyPassword KEY_PWD
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            applicationIdSuffix ".debug"
            versionNameSuffix "-dev"
            buildConfigField "String", "FLURRY_API_KEY", "\"" + FLURRY_API_KEY_DEBUG + "\""
        }
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.release
            buildConfigField "String", "FLURRY_API_KEY", "\"" + FLURRY_API_KEY_PROD + "\""
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    packagingOptions {
        exclude 'META-INF/rxjava.properties' // Temporary until RxJava1 is removed
    }
}

static def getTime() {
    return (Calendar.getInstance().timeInMillis / 1000).longValue()
}

def getLocalProperty(String s) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file("local.properties").newDataInputStream())
    return properties.getProperty(s)
}

retrolambda {
    jdk getLocalProperty("jdk8.dir")
    oldJdk getLocalProperty("jdk7.dir")
    javaVersion JavaVersion.VERSION_1_7
}

dependencies {
    compile fileTree(include: "*.jar", dir: "libs")
    compile project(":bypass")
    compile project(":logging")

    compile "com.android.support:appcompat-v7:$supportLibraryVersion"
    compile "com.android.support:design:$supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$supportLibraryVersion"
    compile "com.android.support:cardview-v7:$supportLibraryVersion"
    compile "com.android.support.constraint:constraint-layout:$contraintLayoutVersion"

    // Required for Flurry
    compile "com.google.android.gms:play-services-analytics:$playServicesVersion"

    compile "com.github.bumptech.glide:glide:$glideVersion"
    compile "com.github.bumptech.glide:okhttp3-integration:$glideOkhttpVersion"

    compile "com.jakewharton:butterknife:$butterknifeVersion"
    annotationProcessor "com.jakewharton:butterknife-compiler:$butterknifeVersion"

    compile "com.github.damien5314.RxReddit:library:$rxRedditVersion"
    compile "com.github.damien5314.RxReddit:android:$rxRedditVersion"
    debugCompile project(':mock-api')

    compile "io.reactivex.rxjava2:rxjava:$RXJAVA_VERSION"
    compile "io.reactivex.rxjava2:rxandroid:$RXANDROID_VERSION"

    compile "com.github.damien5314:TimeSinceTextView:$timeSinceTextViewVersion"

    compile "com.google.dagger:dagger:$daggerVersion"
    annotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"

    compile "uk.co.chrisjenx:calligraphy:$calligraphyVersion"

    compile "com.hannesdorfmann.fragmentargs:annotation:$fragmentArgsVersion"
    annotationProcessor "com.hannesdorfmann.fragmentargs:processor:$fragmentArgsVersion"

    debugCompile "com.squareup.leakcanary:leakcanary-android:$leakCanaryVersion"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$leakCanaryVersion"

    // Test dependencies
    androidTestCompile "junit:junit:$junitVersion"
    androidTestCompile "org.mockito:mockito-core:$mockitoVersion"
    androidTestAnnotationProcessor "com.google.dagger:dagger-compiler:$daggerVersion"

    androidTestCompile "com.android.support:support-annotations:$supportLibraryVersion"
    androidTestCompile 'com.android.support.test:runner:0.5'
    androidTestCompile 'com.android.support.test:rules:0.5'
}
