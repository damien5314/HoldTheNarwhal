apply plugin: "com.android.application"
apply plugin: "android-apt"
apply plugin: "me.tatarka.retrolambda"
apply plugin: "com.jakewharton.hugo"
apply plugin: "com.getkeepsafe.dexcount"
apply plugin: "com.github.ben-manes.versions"
apply plugin: 'io.fabric'

repositories {
    maven { url 'https://maven.fabric.io/public' }
}

android {
    compileSdkVersion project.ext.compileSdkVersion
    buildToolsVersion "$project.ext.buildToolsVersion"

    useLibrary "org.apache.http.legacy"

    defaultConfig {
        applicationId "com.ddiehl.android.htn"
        minSdkVersion 15
        targetSdkVersion project.ext.targetSdkVersion
        versionCode 9
        versionName "0.5.2"
        resConfigs "en"
        buildConfigField "long", "BUILD_TIME_UTC", "" + getTime()
        buildConfigField "String", "REDDIT_APP_ID", "\"" + REDDIT_APP_ID + "\""
        buildConfigField "String", "REDDIT_REDIRECT_URI", "\"" + REDDIT_REDIRECT_URI + "\""
    }

    signingConfigs {
        release {
            storeFile file(KEYSTORE_PATH)
            storePassword KEYSTORE_PWD
            keyAlias KEY_ALIAS
            keyPassword KEY_PWD
        }
    }

    buildTypes {
        debug {
            debuggable true
            minifyEnabled false
            applicationIdSuffix ".debug"
            versionNameSuffix "-dev"
            buildConfigField "String", "FLURRY_API_KEY", "\"" + FLURRY_API_KEY_DEBUG + "\""
        }
        release {
            debuggable false
            minifyEnabled true
            proguardFiles getDefaultProguardFile("proguard-android-optimize.txt"), "proguard-rules.pro"
            signingConfig signingConfigs.release
            buildConfigField "String", "FLURRY_API_KEY", "\"" + FLURRY_API_KEY_PROD + "\""
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
}

def getTime() {
    return (Calendar.getInstance().timeInMillis / 1000).longValue()
}

def getLocalProperty(String s) {
    Properties properties = new Properties()
    properties.load(project.rootProject.file("local.properties").newDataInputStream())
    return properties.getProperty(s)
}

retrolambda {
    jdk getLocalProperty("jdk8.dir")
    oldJdk getLocalProperty("jdk7.dir")
    javaVersion JavaVersion.VERSION_1_7
}

dependencies {
    compile fileTree(include: "*.jar", dir: "libs")
    compile project(":bypass")

    compile "com.android.support:appcompat-v7:$project.ext.supportLibraryVersion"
    compile "com.android.support:support-v4:$project.ext.supportLibraryVersion"
    compile "com.android.support:design:$project.ext.supportLibraryVersion"
    compile "com.android.support:recyclerview-v7:$project.ext.supportLibraryVersion"
    compile "com.android.support:cardview-v7:$project.ext.supportLibraryVersion"
    compile "com.android.support.constraint:constraint-layout:$project.ext.contraintLayoutVersion"

    // Required for Flurry
    compile "com.google.android.gms:play-services-analytics:$project.ext.playServicesVersion"
    // Fabric Crashlytics plugin
    compile("com.crashlytics.sdk.android:crashlytics:2.6.5@aar") {
        transitive = true;
    }

    compile "com.squareup.picasso:picasso:$project.ext.picassoVersion"

    compile "com.jakewharton:butterknife:$project.ext.butterknifeVersion"
    apt "com.jakewharton:butterknife-compiler:$project.ext.butterknifeVersion"

    compile "com.github.damien5314.RxReddit:library:$project.ext.rxRedditVersion"
    compile "com.github.damien5314.RxReddit:android:$project.ext.rxRedditVersion"
    debugCompile "com.github.damien5314.RxReddit:mock:$project.ext.rxRedditVersion"

    compile "io.reactivex:rxandroid:$project.ext.rxAndroidVersion"
    compile "io.reactivex:rxjava:$project.ext.rxJavaVersion"
    compile "com.artemzin.rxjava:proguard-rules:$project.ext.rxJavaProguardVersion"

    compile "com.github.damien5314:TimeSinceTextView:$project.ext.timeSinceTextViewVersion"

    compile "com.jakewharton.timber:timber:$project.ext.timberVersion"

    compile "com.google.dagger:dagger:$project.ext.daggerVersion"
    apt "com.google.dagger:dagger-compiler:$project.ext.daggerVersion"

    compile "uk.co.chrisjenx:calligraphy:$project.ext.calligraphyVersion"

    compile "com.hannesdorfmann.fragmentargs:annotation:$project.ext.fragmentArgsVersion"
    apt "com.hannesdorfmann.fragmentargs:processor:$project.ext.fragmentArgsVersion"

    // Debugging dependencies
    debugCompile "com.squareup.leakcanary:leakcanary-android:$project.ext.leakCanaryVersion"
    releaseCompile "com.squareup.leakcanary:leakcanary-android-no-op:$project.ext.leakCanaryVersion"
}
